"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[952],{5680:(e,t,n)=>{n.d(t,{xA:()=>c,yg:()=>y});var r=n(6540);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(n),m=a,y=u["".concat(l,".").concat(m)]||u[m]||d[m]||o;return n?r.createElement(y,i(i({ref:t},c),{},{components:n})):r.createElement(y,i({ref:t},c))}));function y(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:a,i[1]=s;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6450:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var r=n(8168),a=(n(6540),n(5680));const o={id:"quick-start",title:"Quick start",sidebar_label:"Quick start",sidebar_position:1},i=void 0,s={unversionedId:"quick-start",id:"quick-start",title:"Quick start",description:"Installation",source:"@site/docs/1-quick-start.md",sourceDirName:".",slug:"/quick-start",permalink:"/jack-doc/docs/quick-start",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"quick-start",title:"Quick start",sidebar_label:"Quick start",sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Drag & Drop",permalink:"/jack-doc/docs/drag-and-drop"}},l={},p=[{value:"Installation",id:"installation",level:2},{value:"Quick start",id:"quick-start",level:2}],c={toc:p},u="wrapper";function d(e){let{components:t,...n}=e;return(0,a.yg)(u,(0,r.A)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h2",{id:"installation"},"Installation"),(0,a.yg)("p",null,"Install Jack in your new project"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash",metastring:'title="npm"',title:'"npm"'},"npm install @priolo/jack\n")),(0,a.yg)("p",null,"Also install ",(0,a.yg)("a",{parentName:"p",href:"https://github.com/priolo/jon"},"Jon")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash",metastring:'title="npm"',title:'"npm"'},"npm install @priolo/jon\n")),(0,a.yg)("p",null,"Jack uses Jon for state management",(0,a.yg)("br",{parentName:"p"}),"\n","You don't need to know Jon perfectly to use Jack"),(0,a.yg)("h2",{id:"quick-start"},"Quick start"),(0,a.yg)("p",null,"You can do everything in ",(0,a.yg)("inlineCode",{parentName:"p"},"App.tsx")),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-tsx",metastring:'title="App.tsx"',title:'"App.tsx"'},'import { Button, CardsGroup } from "@priolo/jack";\nimport { createStore } from "@priolo/jon";\nimport { FunctionComponent } from "react";\n\nimport \'./index.css\';\nimport "@priolo/jack/dist/style.css";\n\nconst App: FunctionComponent = () => {\n\n  // HANDLERS\n  /** add a new CARD to the DECK */\n  const handleAdd = () => {\n    const view = createStore(cardSetup) as ViewStore;\n    deckCardsSo.add({ view });\n  };\n\n  // RENDER\n  return (\n    <div style={cssRoot}>\n\n      <div style={{ display: "flex", flexDirection: "column" }}>\n        <Button onClick={handleAdd}>ADD CARD</Button>\n      </div>\n\n      <div style={cssDeck}>\n        <CardsGroup\n          cardsStore={deckCardsSo}\n          Render={({ view }) => <ExampleView store={view} />} />\n      </div>\n\n    </div>\n  );\n};\n')),(0,a.yg)("p",null,"We have a ",(0,a.yg)("inlineCode",{parentName:"p"},"cssRoot")," div that contains a simple menu to add CARDs",(0,a.yg)("br",{parentName:"p"}),"\n","and a ",(0,a.yg)("inlineCode",{parentName:"p"},"cssDeck")," div that contains the CARDs  "),(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},"CardsGroup")," connects with the ",(0,a.yg)("inlineCode",{parentName:"p"},"deckCardsSo")," STORE",(0,a.yg)("br",{parentName:"p"}),"\n","Let's create the STORE that contains all the CARDs  "),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-tsx"},"const deckCardsSo = createStore(cardsSetup) as CardsStore\n")),(0,a.yg)("p",null,"Let's create the STORE to manage the state of a single CARD"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-tsx"},'const setup = {\n  state: {\n    text: "init value",\n  },\n  mutators: {\n    setText: (text: string) => ({ text }),\n  },\n}\nconst cardSetup = mixStores(viewSetup, setup)\n')),(0,a.yg)("p",null,"Note that this STORE derives from ",(0,a.yg)("inlineCode",{parentName:"p"},"viewSetup")," but we'll see that later"),(0,a.yg)("p",null,"And, finally, the VIEW component of the CARD"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-tsx"},"const CardView: FunctionComponent = ({\n  store,\n}) => {\n\n  // STORE\n  const state = useStore(store)\n\n  // RENDER\n  return (\n    <div style={cssCard}>\n      <TextInput\n        value={state.text}\n        onChange={(text) => store.setText(text)}\n      />\n    </div>\n  )\n}\n")),(0,a.yg)("p",null,"Don't worry and click ",(0,a.yg)("a",{parentName:"p",href:"https://codesandbox.io/p/sandbox/01-quick-start-qj86sr?file=%2Fsrc%2FApp.tsx"},"here"),(0,a.yg)("br",{parentName:"p"}),"\n","there's all the complete code"),(0,a.yg)("p",null,"Of course, it's ugly.",(0,a.yg)("br",{parentName:"p"}),"\n","But we know that a bit of CSS turns crap into GOLD!  "),(0,a.yg)("p",null,'Anyway, the "ADD CARD" button adds a new ',(0,a.yg)("inlineCode",{parentName:"p"},"CardView")," component to the DECK",(0,a.yg)("br",{parentName:"p"}),"\n","And each ",(0,a.yg)("inlineCode",{parentName:"p"},"CardView")," has a ",(0,a.yg)("inlineCode",{parentName:"p"},"TextInput")," that displays/modifies the state of the CARD's STORE",(0,a.yg)("br",{parentName:"p"}),"\n","(STORE generated from the ",(0,a.yg)("inlineCode",{parentName:"p"},"cardSetup")," template)"))}d.isMDXComponent=!0}}]);