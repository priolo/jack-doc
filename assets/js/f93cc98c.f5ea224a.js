"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[861],{5680:(e,n,t)=>{t.d(n,{xA:()=>d,yg:()=>y});var r=t(6540);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=r.createContext({}),c=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},d=function(e){var n=c(e.components);return r.createElement(s.Provider,{value:n},e.children)},l="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},g=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),l=c(t),g=o,y=l["".concat(s,".").concat(g)]||l[g]||u[g]||a;return t?r.createElement(y,i(i({ref:n},d),{},{components:t})):r.createElement(y,i({ref:n},d))}));function y(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=g;var p={};for(var s in n)hasOwnProperty.call(n,s)&&(p[s]=n[s]);p.originalType=e,p[l]="string"==typeof e?e:o,i[1]=p;for(var c=2;c<a;c++)i[c]=t[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}g.displayName="MDXCreateElement"},2201:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>p,toc:()=>c});var r=t(8168),o=(t(6540),t(5680));const a={id:"drag-and-drop",title:"Drag and Drop",sidebar_label:"Drag & Drop",sidebar_position:2},i=void 0,p={unversionedId:"drag-and-drop",id:"drag-and-drop",title:"Drag and Drop",description:"Let's improve things:",source:"@site/docs/2-drag-and-drop.md",sourceDirName:".",slug:"/drag-and-drop",permalink:"/jack-doc/docs/drag-and-drop",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{id:"drag-and-drop",title:"Drag and Drop",sidebar_label:"Drag & Drop",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Quick start",permalink:"/jack-doc/docs/quick-start"},next:{title:"Style",permalink:"/jack-doc/docs/style"}},s={},c=[],d={toc:c},l="wrapper";function u(e){let{components:n,...t}=e;return(0,o.yg)(l,(0,r.A)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,o.yg)("p",null,"Let's improve things:",(0,o.yg)("br",{parentName:"p"}),"\n",'We\'d like to be able to move, delete, or "iconify" the created CARDs.'),(0,o.yg)("p",null,'This can be done "manually," but now we\'ll use the ',(0,o.yg)("inlineCode",{parentName:"p"},"Header")," component.",(0,o.yg)("br",{parentName:"p"}),"\n","So in the CARD, we add:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-tsx",metastring:'title="App.tsx"',title:'"App.tsx"'},'/** the VIEW of the example card */\nconst CardView: FunctionComponent = ({\n  store,\n}) => {\n\n  // STORE\n  const state = useStore(store)\n\n  // RENDER\n  return (\n    <div style={cssCard}>\n>>>   <Header store={store} icon="ICON" />\n      <TextInput\n        value={state.text}\n        onChange={(text) => store.setText(text)}\n      />\n    </div>\n  )\n}\n')),(0,o.yg)("p",null,"So we have a component above the card.",(0,o.yg)("br",{parentName:"p"}),"\n","If we open two CARDs, we can move them by dragging the Header.",(0,o.yg)("br",{parentName:"p"}),"\n","Since each CARD has its own STORE, you can change the TEXT-BOX value to distinguish them.",(0,o.yg)("br",{parentName:"p"}),"\n","You can also iconify the CARD if you press on ICON.  "),(0,o.yg)("p",null,"It would be nice to see a placeholder of where the dragged CARD will be positioned.",(0,o.yg)("br",{parentName:"p"}),"\n","This can be done by inserting the ",(0,o.yg)("inlineCode",{parentName:"p"},"DragCmp")," component into the scene.  "),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-tsx",metastring:'title="App.tsx"',title:'"App.tsx"'},'const App: FunctionComponent = () => {\n\n  // HANDLERS\n  /** insert a new CARD to the DECK of type EXAMPLE */\n  const handleAdd = () => {\n    const view = createStore(cardSetup) as ViewStore\n    deckCardsSo.add({ view })\n  };\n\n  // RENDER\n  return (\n    <div style={cssRoot}>\n\n      <div style={{ display: "flex", flexDirection: "column" }}>\n        <Button onClick={handleAdd}>ADD CARD</Button>\n      </div>\n\n      <div style={cssDeck}>\n        <CardsGroup\n          cardsStore={deckCardsSo}\n          Render={({ view }) => <CardView store={view} />} />\n      </div>\n\n>>>   <DragCmp />\n\n    </div>\n  )\n}\n')),(0,o.yg)("p",null,"Here's the ",(0,o.yg)("a",{parentName:"p",href:"https://codesandbox.io/p/sandbox/drag-drop-fjkddg?file=%2Fsrc%2FApp.tsx%3A14%2C1-41%2C2"},"code")))}u.isMDXComponent=!0}}]);